# Note: Only define a driver ONCE per group.
#
# Setting a priority AND an event means both have to be satisfied.
#
# However, defining different sets for the same driver allows you
# to do OR operations.
#
# See how this logic is modeled below:
#
# if (priority in info, warn or error) or
#    (event == compute.scheduler.run_instance)
#        send to rpc driver ...
#
# if priority == 'poll' and
#    event == 'bandwidth.*'
#        send to poll driver

group_1:
    - rpc:
        accepted_priorities: ['info', 'warn', 'error']

    - poll:
        accepted_priorities: ['poll']
        accepted_events: ['bandwidth.*']

    - log:
        accepted_events: ['compute.instance.exists']

group_2:
    - rpc:â‹…
        accepted_events: ['compute.scheduler.run_instance.*']

